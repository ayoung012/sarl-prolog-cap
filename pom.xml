<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.bitbucket.ssardina-research</groupId>
	<artifactId>sarl-prolog-cap</artifactId>
	<version>1.6.${env.SARL_VERSION}-devel</version>

    <name>SARL Capacity for SWI Prolog Connectivity</name>
    <url>https://bitbucket.org/ssardina-research/sarl-prolog-cap</url>
    <description>
    	Capacities and Skills for SARL to connect to SWI Prolog system.
		Relies on Mochalog (https://github.com/ssardina/mochalog)
	</description>

  	<developers>
    	<developer>
	      <name>Sebastian Sardina</name>
	      <email>ssardina@gmail.com</email>
	      <organization>ssardina-research</organization>
	      <organizationUrl>https://bitbucket.org/ssardina-research/</organizationUrl>
	    </developer>
  	</developers>

  	<licenses>
	    <license>
	      <name>GNU General Public License, Version 3.0</name>
	      <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
	    </license>
  	</licenses>

    <properties>
        <!-- SARL framework version and configuration -->
        <sarl.version>${env.SARL_VERSION}</sarl.version>

        <!-- Janus project version -->
        <janus.version>2.${sarl.version}</janus.version>

        <!-- Java compiler version to be used -->
        <compiler.level>1.8</compiler.level>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    

    <dependencies>
        <!-- Janus Project kernel (contains SARL language core) -->
        <dependency>
            <groupId>io.janusproject</groupId>
            <artifactId>io.janusproject.kernel</artifactId>
            <version>${janus.version}</version>
        </dependency>

        <!--  MOCHALOG interface for SWI-Prolog -->
        <!--  0.4.x Based on Maven with flat structure (no sub-modules)-->
        <dependency>
            <groupId>com.github.ssardina</groupId>
            <artifactId>mochalog</artifactId>
            <version>0.5.0</version>
        </dependency>
 		   
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.7</version>
		</dependency>
        

        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.12</version>
          <scope>test</scope>
		</dependency>
        
        
    </dependencies>

	<repositories>
        <!-- Janus Project kernel (contains SARL language core) -->
	  <repository>
	    <id>io.sarl-maven</id>
	    <name>SARL Snapshots</name>
	    <url>http://maven.sarl.io/</url>
	  </repository>
	  
        <!-- JitPack used for remote installation of dependencies from Github and Bitbucket -->
        <repository>
            <id>jitpack.io</id>
            <name>JitPack Repository</name>
            <url>https://jitpack.io</url>
        </repository>
	</repositories>
	
	
	<pluginRepositories>
	  <pluginRepository>
	    <id>io.sarl-maven</id>
	    <name>SARL Snapshots</name>
	    <url>http://maven.sarl.io/</url>
	    <snapshots>
	      <enabled>true</enabled>
	    </snapshots>
	  </pluginRepository>
	</pluginRepositories>





    <!-- Build pipeline plugins -->
    <build>
 			<resources>
               <resource>
                    <directory>src/main/sarl</directory>
                    <filtering>false</filtering>
                </resource>
                <resource>
                    <directory>src/main/java</directory>
                    <filtering>false</filtering>
                </resource>
          </resources>        


        <plugins>
            <plugin>
                <!-- SARL Maven compiler plugin -->
                <!-- Facilitate compilation of SARL source code to Java classes -->
                <groupId>io.sarl.maven</groupId>
                <artifactId>sarl-maven-plugin</artifactId>
                <version>${sarl.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <source>${compiler.level}</source>
                    <target>${compiler.level}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

<!--
			<plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-javadoc-plugin</artifactId>
                 <executions>
                   <execution>
                         <id>attach-javadocs</id>
                         <goals>
                           <goal>jar</goal>
                         </goals>
                   </execution>
                 </executions>
            </plugin>
-->
           <!--  Attach sources -->
	       <plugin>
	              <groupId>org.apache.maven.plugins</groupId>
	              <artifactId>maven-source-plugin</artifactId>
	              <executions>
	                    <execution>
	                          <id>attach-sources</id>
	                           <goals>
	                               <goal>jar</goal>
	                           </goals>
	                    </execution>
	              </executions>
	       </plugin>

			<!-- https://maven.apache.org/surefire/maven-surefire-plugin/
			The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an application. 
			It generates reports in two different file formats:
			 -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <propertyName>java.library.path</propertyName>
                        <buildDirectory>/usr/lib/swi-prolog/lib/amd64/</buildDirectory>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

			<!--  Class to execute via maven exec:java 
			https://www.mojohaus.org/exec-maven-plugin/
			-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
	                <mainClass>BootTestAgt</mainClass>
                </configuration>
            </plugin>



		</plugins>

    </build>

</project>
